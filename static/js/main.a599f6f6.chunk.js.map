{"version":3,"sources":["util/apollo/client.js","util/apollo/index.js","util/redux/reducers/notifications.js","util/redux/reducers/user.js","util/redux/reducers/index.js","util/redux/store.js","util/material-ui/theme.js","paths/Auth/View.js","util/apollo/queries/authentication.js","util/redux/actions/user.js","util/redux/actions/notifications.js","util/notifications/withNotifications.js","util/notifications/Notifications.js","util/notifications/index.js","paths/Auth/Login/index.js","paths/Auth/Login/View.js","paths/Auth/Register/index.js","paths/Auth/Register/View.js","paths/Auth/index.js","components/authroute/index.js","components/authroute/AuthRoute.js","components/map/InfoBox/index.js","components/map/Marker/index.js","components/map/Filters/Panel/index.js","components/map/Filters/index.js","components/map/index.js","components/userinterface/LogoutMenu.js","components/userinterface/Header.js","components/userinterface/Drawer.js","components/userinterface/index.js","paths/Home/index.js","App.js","index.js"],"names":["cache","InMemoryCache","httpLink","HttpLink","uri","errorLink","onError","_ref","graphQLErrors","networkError","link","ApolloLink","from","client","ApolloClient","initState","message","token","combineReducers","notifications","state","arguments","length","undefined","action","type","user","Object","objectSpread","store","createStore","rootReducer","composeWithDevTools","Theme","createMuiTheme","typography","useNextVariants","overrides","MuiButton","label","textTransform","props","MuiTextField","variant","withStyles","root","display","justifyContent","paddingTop","width","classes","match","react_default","a","createElement","className","react_router","path","url","component","Login","Register","to","LOGIN","gql","_templateObject","REGISTER","_templateObject2","setToken","logout","variants","notify","body","notifySuccess","notifyError","notifyWarning","mapDispatchToProps","dispatch","withNotifications","BaseComponent","connect","styles","theme","success","backgroundColor","green","error","red","info","grey","warning","yellow","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","alignItems","variantIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","SnackbarContentWrapper","onClose","other","objectWithoutProperties","Icon","index_es","assign","clsx","key","color","onClick","Close_default","compose","_ref2","_useState","useState","_useState2","slicedToArray","open","setOpen","closeSnackbar","useEffect","anchorOrigin","vertical","horizontal","autoHideDuration","View","padding","header","footer","marginTop","submitButton","margin","concat","submitText","letterSpacing","fontWeight","palette","primary","contrastText","textField","setUserToken","withApollo","history","login","password","setState","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","e","stored","wrap","_context","prev","next","preventDefault","mutate","mutation","variables","then","_ref3","data","signIn","catch","sent","sessionStorage","getItem","JSON","parse","setItem","stringify","push","stop","_x","apply","this","changeHandler","_ref4","target","defineProperty","name","value","onSubmit","required","onChange","ChevronRight_default","light","react_router_dom","username","email","signUp","alert","AuthRoute","Component","storage","isAuth","isNotAuth","bottom","left","position","content","cursor","noWrap","borderRadius","height","marker","transition","stopPropagation","onMouseEnter","onMouseLeave","map_InfoBox","drawer","flexShrink","drawerHeader","mixins","toolbar","minHeight","closeFiltersPanel","PaperProps","style","zIndex","anchor","list","map","text","button","background","border","boxShadow","right","top","&:hover","searchIcon","Fragment","Search_default","Filters_Panel","center","zoom","lib_default","bootstrapURLKeys","process","defaultCenter","lat","lng","defaultZoom","map_Marker","map_Filters","clearReduxToken","withRouter","headerText","logoutMenuAnchor","setLogoutMenuAnchor","setLogoutMenu","clearAnchor","currentTarget","Person_default","id","anchorEl","keepMounted","Boolean","_unused","drawerOpen","paddingLeft","filler","menuIcon","toggleDrawer","Menu_default","userinterface_LogoutMenu","closeDrawer","ChevronLeft_default","belowHeader","viewArea","children","userinterface_Header","Drawer","mapContainer","userinterface","default","minWidth","Auth","authroute","Home","notifications_Notifications","ReactDOM","render","react_apollo_esm","es","basename","core_styles","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.a599f6f6.chunk.js","sourcesContent":["import { InMemoryCache } from 'apollo-cache-inmemory'\nimport { ApolloClient } from 'apollo-client'\nimport { HttpLink } from 'apollo-link-http'\nimport { onError } from 'apollo-link-error'\nimport { ApolloLink } from 'apollo-link'\n\nconst cache = new InMemoryCache()\n\nconst httpLink = new HttpLink({\n  uri: 'https://crate-tracker-backend.herokuapp.com/graphql',\n})\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    // do something with graphql error\n  }\n\n  if (networkError) {\n    // do something with network error\n  }\n})\n\nconst link = ApolloLink.from([errorLink, httpLink])\n\nconst client = new ApolloClient({\n  link,\n  cache,\n})\n\nexport default client\n","import client from './client'\nimport ApolloError from './components/Error'\nimport ApolloLoading from './components/Loading'\n\nexport default client\nexport { ApolloLoading, ApolloError }\n","const initState = {\n  message: {},\n}\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case 'NOTIFICATIONS/NEW':\n      return { message: action.message }\n    default:\n      return state\n  }\n}\n","const initState = {\n  token: '',\n}\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case 'USER/SET_TOKEN':\n      return { ...state, token: action.token }\n    case 'USER/CLEAR_TOKEN':\n      return { token: '' }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport notifications from './notifications'\nimport user from './user'\n\nexport default combineReducers({ notifications, user })\n","import { createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer, composeWithDevTools())\n\nexport { store }\n","import { createMuiTheme } from '@material-ui/core/'\n\nconst Theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  overrides: {\n    MuiButton: {\n      label: {\n        textTransform: 'none',\n      },\n    },\n  },\n  props: {\n    MuiTextField: {\n      variant: 'outlined',\n    },\n  },\n})\n\nexport default Theme\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core'\nimport { Redirect, Route, Switch } from 'react-router-dom'\n\nimport { Login, Register } from './'\n\nconst styles = () => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    paddingTop: 200,\n    width: '100%',\n  },\n})\n\nconst View = ({ classes, match }) => {\n  return (\n    <div className={classes.root}>\n      <Switch>\n        <Route path={match.url + '/login'} component={Login} />\n        <Route path={match.url + '/register'} component={Register} />\n        <Redirect to=\"/auth/login\" />\n      </Switch>\n    </div>\n  )\n}\n\nView.propTypes = {\n  classes: PropTypes.object,\n  match: PropTypes.object,\n}\n\nexport default withStyles(styles)(View)\n","import gql from 'graphql-tag'\n\nconst LOGIN = gql`\n  mutation($login: String!, $password: String!) {\n    signIn(login: $login, password: $password) {\n      token\n    }\n  }\n`\n\nconst REGISTER = gql`\n  mutation($username: String!, $email: String!, $password: String!) {\n    signUp(username: $username, email: $email, password: $password) {\n      token\n    }\n  }\n`\n\nexport { LOGIN, REGISTER }\n","export const setToken = token => ({\n  type: 'USER/SET_TOKEN',\n  token,\n})\n\nexport const logout = () => ({\n  type: 'USER/CLEAR_TOKEN',\n})\n","const variants = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  ERROR: 'error',\n  WARNING: 'warning',\n}\n\nexport const notify = body => ({\n  type: 'NOTIFICATIONS/NEW',\n  message: {\n    body,\n    variant: variants.INFO,\n  },\n})\n\nexport const notifySuccess = body => ({\n  type: 'NOTIFICATIONS/NEW',\n  message: {\n    body,\n    variant: variants.SUCCESS,\n  },\n})\nexport const notifyError = body => ({\n  type: 'NOTIFICATIONS/NEW',\n  message: {\n    body,\n    variant: variants.ERROR,\n  },\n})\nexport const notifyWarning = body => ({\n  type: 'NOTIFICATIONS/NEW',\n  message: {\n    body,\n    variant: variants.WARNING,\n  },\n})\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { notifications } from '../redux/actions'\n\nconst mapDispatchToProps = dispatch => ({\n  notifications: {\n    notify: message => dispatch(notifications.notify(message)),\n    notifySuccess: message => dispatch(notifications.notifySuccess(message)),\n    notifyError: message => dispatch(notifications.notifyError(message)),\n    notifyWarning: message => dispatch(notifications.notifyWarning(message)),\n  },\n})\n\nconst withNotifications = BaseComponent => {\n  const ConnectedComponent = props => <BaseComponent {...props} />\n\n  return connect(\n    null,\n    mapDispatchToProps\n  )(ConnectedComponent)\n}\n\nexport default withNotifications\n","import React, { useState, useEffect } from 'react'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\nimport { compose } from 'recompose'\nimport { connect } from 'react-redux'\nimport {\n  IconButton,\n  Snackbar,\n  SnackbarContent,\n  withStyles,\n} from '@material-ui/core'\nimport { red, grey, green, yellow } from '@material-ui/core/colors'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport CloseIcon from '@material-ui/icons/Close'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport InfoIcon from '@material-ui/icons/Info'\n\nconst styles = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: red[500],\n  },\n  info: {\n    backgroundColor: grey[800],\n  },\n  warning: {\n    backgroundColor: yellow[800],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n})\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n}\n\nconst SnackbarContentWrapper = withStyles(styles)(\n  ({ classes, className, message, onClose, variant, ...other }) => {\n    const Icon = variantIcon[variant]\n\n    return (\n      <SnackbarContent\n        className={clsx(classes[variant], className)}\n        message={\n          <span className={classes.message}>\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton key=\"close\" color=\"inherit\" onClick={onClose}>\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n        {...other}\n      />\n    )\n  }\n)\n\nSnackbarContentWrapper.propTypes = {\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n  other: PropTypes.object,\n}\n\nconst Notifications = ({ message }) => {\n  const [open, setOpen] = useState(!!message.body)\n  const closeSnackbar = () => setOpen(false)\n\n  useEffect(() => {\n    setOpen(!!message.body)\n  }, [message])\n\n  //\n  // Set to true to style snackbars\n  //\n  const styling = false\n\n  if (!styling && message && message.body)\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={open}\n        autoHideDuration={1400}\n        onClose={closeSnackbar}\n      >\n        <SnackbarContentWrapper\n          onClose={closeSnackbar}\n          variant={message.variant || 'info'}\n          message={message.body}\n        />\n      </Snackbar>\n    )\n\n  if (styling)\n    return (\n      <>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={true}\n          autoHideDuration={3000000}\n          onClose={closeSnackbar}\n        >\n          <SnackbarContentWrapper\n            onClose={closeSnackbar}\n            variant={'info'}\n            message={'INFO sample-message'}\n          />\n        </Snackbar>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          open={true}\n          autoHideDuration={3000000}\n          onClose={closeSnackbar}\n        >\n          <SnackbarContentWrapper\n            onClose={closeSnackbar}\n            variant={'success'}\n            message={'SUCCESS sample-message'}\n          />\n        </Snackbar>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          open={true}\n          autoHideDuration={3000000}\n          onClose={closeSnackbar}\n        >\n          <SnackbarContentWrapper\n            onClose={closeSnackbar}\n            variant={'warning'}\n            message={'WARNING sample-message'}\n          />\n        </Snackbar>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'left',\n          }}\n          open={true}\n          autoHideDuration={3000000}\n          onClose={closeSnackbar}\n        >\n          <SnackbarContentWrapper\n            onClose={closeSnackbar}\n            variant={'error'}\n            message={'ERROR sample-message'}\n          />\n        </Snackbar>{' '}\n      </>\n    )\n\n  return null\n}\n\nNotifications.propTypes = {\n  classes: PropTypes.object,\n  message: PropTypes.object,\n}\n\nconst mapStateToProps = state => ({\n  message: state.notifications.message,\n})\n\nexport default compose(\n  connect(mapStateToProps),\n  withStyles(styles)\n)(Notifications)\n","import withNotifications from './withNotifications'\nimport Notifications from './Notifications'\n\nexport { Notifications }\nexport default withNotifications\n","import View from './View'\n\nexport default View\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { withApollo } from 'react-apollo'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport {\n  Button,\n  Divider,\n  Paper,\n  TextField,\n  Typography,\n  withStyles,\n} from '@material-ui/core'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\n\nimport { LOGIN } from '../../../util/apollo/queries/authentication'\nimport withNotifications from '../../../util/notifications'\nimport { user } from '../../../util/redux/actions'\n\nconst styles = theme => ({\n  root: {\n    padding: theme.spacing.unit * 3,\n    width: 400,\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  footer: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing.unit,\n  },\n  submitButton: {\n    margin: `${theme.spacing.unit * 2}px 0`,\n    width: '100%',\n  },\n  submitText: {\n    letterSpacing: 0.5,\n    fontWeight: 700,\n    color: theme.palette.primary.contrastText,\n  },\n  textField: {\n    width: '100%',\n  },\n})\n\nconst Login = ({ classes, client, history, notifications, setUserToken }) => {\n  const [state, setState] = useState({\n    login: '',\n    password: '',\n  })\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n\n    const token = await client\n      .mutate({\n        mutation: LOGIN,\n        variables: {\n          login: state.login,\n          password: state.password,\n        },\n      })\n      .then(({ data }) => data.signIn.token)\n      .catch(e => {\n        notifications.notifyError(e.message)\n      })\n\n    if (token) {\n      setUserToken(token)\n\n      let stored = sessionStorage.getItem('theoTracker')\n      stored = stored ? JSON.parse(stored) : {}\n      stored.token = token\n      sessionStorage.setItem('theoTracker', JSON.stringify(stored))\n\n      notifications.notifySuccess('Logged In Successfully')\n      history.push('/home')\n    }\n  }\n\n  const changeHandler = ({ target }) => {\n    setState(prev => ({ ...prev, [target.name]: target.value }))\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <form onSubmit={handleSubmit}>\n        <div className={classes.header}>\n          <Typography variant=\"h5\">Login</Typography>\n        </div>\n        <TextField\n          label=\"Username\"\n          name=\"login\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          required\n          className={classes.textField}\n          value={state.login}\n          onChange={changeHandler}\n        />\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          required\n          className={classes.textField}\n          value={state.password}\n          onChange={changeHandler}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submitButton}\n        >\n          <Typography variant=\"subtitle1\" className={classes.submitText}>\n            Login\n          </Typography>{' '}\n          <ChevronRightIcon />\n        </Button>\n        <Divider light />\n        <div className={classes.footer}>\n          <Link to=\"/auth/register/\">\n            <Button>Create Account</Button>\n          </Link>\n        </div>\n      </form>\n    </Paper>\n  )\n}\n\nLogin.propTypes = {\n  classes: PropTypes.object,\n  client: PropTypes.object,\n  history: PropTypes.object,\n  notifications: PropTypes.object,\n  setUserToken: PropTypes.func,\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setUserToken: token => dispatch(user.setToken(token)),\n})\n\nexport default compose(\n  withNotifications,\n  withStyles(styles),\n  connect(\n    null,\n    mapDispatchToProps\n  ),\n  withApollo\n)(Login)\n","import View from './View'\n\nexport default View\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { withApollo } from 'react-apollo'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport {\n  Button,\n  Divider,\n  Paper,\n  TextField,\n  Typography,\n  withStyles,\n} from '@material-ui/core'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\n\nimport withNotifications from '../../../util/notifications/withNotifications'\nimport { REGISTER } from '../../../util/apollo/queries/authentication'\nimport { user } from '../../../util/redux/actions'\n\nconst styles = theme => ({\n  root: {\n    padding: theme.spacing.unit * 3,\n    width: 400,\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  footer: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing.unit,\n  },\n  submitButton: {\n    margin: `${theme.spacing.unit * 2}px 0`,\n    width: '100%',\n  },\n  submitText: {\n    letterSpacing: 0.5,\n    fontWeight: 700,\n    color: theme.palette.primary.contrastText,\n  },\n  textField: {\n    width: '100%',\n  },\n})\n\nconst Register = ({ classes, client, history, setUserToken }) => {\n  const [state, setState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  })\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n\n    const token = await client\n      .mutate({\n        mutation: REGISTER,\n        variables: {\n          username: state.username,\n          email: state.email,\n          password: state.password,\n        },\n      })\n      .then(({ data }) => data.signUp.token)\n      .catch(e => alert(e))\n\n    if (token) {\n      setUserToken(token)\n\n      let stored = sessionStorage.getItem('theoTracker')\n      stored = stored ? JSON.parse(stored) : {}\n      stored.token = token\n      sessionStorage.setItem('theoTracker', JSON.stringify(stored))\n\n      history.push('/home')\n    }\n  }\n\n  const changeHandler = ({ target }) =>\n    setState(prev => ({ ...prev, [target.name]: target.value }))\n\n  return (\n    <Paper className={classes.root}>\n      <form onSubmit={handleSubmit}>\n        <div className={classes.header}>\n          <Typography variant=\"h5\">Register</Typography>\n        </div>\n        <TextField\n          label=\"Username\"\n          name=\"username\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          required\n          className={classes.textField}\n          value={state.username}\n          onChange={changeHandler}\n        />\n        <TextField\n          label=\"Email\"\n          name=\"email\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          required\n          className={classes.textField}\n          value={state.email}\n          onChange={changeHandler}\n        />\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          required\n          className={classes.textField}\n          value={state.password}\n          onChange={changeHandler}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submitButton}\n        >\n          <Typography variant=\"subtitle1\" className={classes.submitText}>\n            Register\n          </Typography>{' '}\n          <ChevronRightIcon />\n        </Button>\n        <Divider light />\n        <div className={classes.footer}>\n          <Link to=\"/auth/login/\">\n            <Button>Have an account?</Button>\n          </Link>\n        </div>\n      </form>\n    </Paper>\n  )\n}\n\nRegister.propTypes = {\n  classes: PropTypes.object,\n  client: PropTypes.object,\n  history: PropTypes.object,\n  setUserToken: PropTypes.func,\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setUserToken: token => dispatch(user.setToken(token)),\n})\n\nexport default compose(\n  withNotifications,\n  withStyles(styles),\n  connect(\n    null,\n    mapDispatchToProps\n  ),\n  withApollo\n)(Register)\n","import View from './View'\nimport Login from './Login'\nimport Register from './Register'\n\nexport default View\nexport { Login, Register }\n","import AuthRoute from './AuthRoute'\n\nexport default AuthRoute\n","import React from 'react'\nimport { Route, Redirect } from 'react-router'\nimport { connect } from 'react-redux'\n\nconst AuthRoute = ({ component: Component, token, ...props }) => {\n  if (!token.length) {\n    const storage = sessionStorage.getItem('theoTracker')\n    if (storage) token = JSON.parse(storage).token || ''\n  }\n  const isAuth = <Route {...props} component={Component} />\n  const isNotAuth = <Redirect to=\"/auth/login\" />\n  return token.length ? isAuth : isNotAuth\n}\n\nconst mapStateToProps = state => ({\n  token: state.user.token,\n})\n\nexport default connect(mapStateToProps)(AuthRoute)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Paper, Typography, withStyles } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\n\nconst styles = theme => ({\n  root: {\n    alignItems: 'center',\n    bottom: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    left: 0,\n    padding: theme.spacing.unit * 2,\n    position: 'absolute',\n  },\n  content: {\n    cursor: 'pointer',\n    padding: theme.spacing.unit * 2,\n  },\n})\n\n// eslint-disable-next-line no-unused-vars\nconst InfoBox = ({ classes, open, setOpen }) => {\n  if (open)\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.content}>\n          <Typography noWrap>ID: 12349073</Typography>\n          <Typography noWrap>Type: Crate</Typography>\n          <Typography noWrap>Updated: July 08, 2019 4:44PM</Typography>\n          <Link>\n            <Typography noWrap>Details</Typography>\n          </Link>\n        </Paper>\n      </div>\n    )\n  return null\n}\n\nInfoBox.propTypes = {\n  classes: PropTypes.object,\n  open: PropTypes.bool,\n  setOpen: PropTypes.func,\n}\n\nexport default withStyles(styles)(InfoBox)\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core'\n\nimport InfoBox from '../InfoBox'\n\nconst styles = () => ({\n  root: {\n    alignItems: 'center',\n    borderRadius: 15,\n    cursor: 'pointer',\n    display: 'flex',\n    height: 30,\n    justifyContent: 'center',\n    width: 30,\n  },\n  marker: {\n    backgroundColor: 'red',\n    height: 10,\n    width: 10,\n    position: 'relative',\n    transition: '.2s',\n  },\n})\n\nconst Marker = ({ classes }) => {\n  const [open, setOpen] = useState(false)\n\n  const showInfo = () => setOpen(true)\n  const hideInfo = () => setOpen(false)\n  const toggleInfo = e => {\n    e.stopPropagation()\n    setOpen(prev => !prev)\n  }\n\n  return (\n    <div\n      className={classes.root}\n      onClick={toggleInfo}\n      onMouseEnter={showInfo}\n      onMouseLeave={hideInfo}\n    >\n      <div className={classes.marker}>\n        <InfoBox open={open} setOpen={setOpen} />\n      </div>\n    </div>\n  )\n}\n\nMarker.propTypes = {\n  classes: PropTypes.object,\n}\n\nexport default withStyles(styles)(Marker)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Drawer,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  withStyles,\n} from '@material-ui/core'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\n\nconst styles = theme => ({\n  drawer: {\n    width: 280,\n    flexShrink: 0,\n  },\n  drawerHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'flex-start',\n    height: theme.mixins.toolbar.minHeight + 8,\n    padding: `0 ${theme.spacing.unit * 2}px`,\n  },\n})\n\nconst Panel = ({ classes, open, closeFiltersPanel }) => {\n  return (\n    <Drawer\n      PaperProps={{\n        style: {\n          zIndex: 1099,\n          width: 280,\n        },\n      }}\n      anchor=\"right\"\n      open={open}\n      onClose={closeFiltersPanel}\n      className={classes.drawer}\n    >\n      <div className={classes.drawerHeader}>\n        <IconButton onClick={closeFiltersPanel}>\n          <ChevronRightIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <div className={classes.list}>\n        <List>\n          {['Home', 'Inspections', 'Stuff', 'More Stuff'].map(text => (\n            <ListItem button key={text}>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </Drawer>\n  )\n}\n\nPanel.propTypes = {\n  classes: PropTypes.object,\n}\n\nexport default withStyles(styles)(Panel)\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\n\nimport Panel from './Panel'\n\nconst styles = () => ({\n  root: {\n    alignItems: 'center',\n    background: 'rgb(255, 255, 255)',\n    border: '0px none',\n    borderRadius: 2,\n    boxShadow: 'rgba(0, 0, 0, 0.3) 0px 1px 4px -1px',\n    color: '#666666',\n    cursor: 'pointer',\n    display: 'flex',\n    height: 40,\n    justifyContent: 'center',\n    margin: 10,\n    position: 'absolute',\n    right: 50,\n    width: 40,\n    top: 0,\n    '&:hover': {\n      color: '#333333',\n    },\n  },\n  searchIcon: {},\n})\n\nconst Filters = ({ classes }) => {\n  const [open, setOpen] = useState(false)\n\n  const openFiltersPanel = () => setOpen(true)\n  const closeFiltersPanel = () => setOpen(false)\n\n  return (\n    <>\n      <div className={classes.root}>\n        <SearchIcon onClick={openFiltersPanel} className={classes.searchIcon} />\n      </div>\n      <Panel open={open} closeFiltersPanel={closeFiltersPanel} />\n    </>\n  )\n}\n\nFilters.propTypes = {\n  classes: PropTypes.object,\n}\n\nexport default withStyles(styles)(Filters)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport GoogleMapReact from 'google-map-react'\nimport { withStyles } from '@material-ui/core'\n\nimport Marker from './Marker'\nimport Filters from './Filters'\n\nconst styles = () => ({\n  root: {\n    height: '100%',\n    position: 'relative',\n    width: '100%',\n  },\n})\n\nconst myMap = ({ classes, center, zoom }) => {\n  return (\n    <div className={classes.root}>\n      <GoogleMapReact\n        bootstrapURLKeys={{\n          key:\n            process.env.NODE_ENV === 'development' &&\n            process.env.REACT_APP_GMAPS_KEY,\n        }}\n        defaultCenter={\n          center || {\n            lat: 30.25,\n            lng: -92,\n          }\n        }\n        defaultZoom={zoom || 10}\n      >\n        <Marker lat={30.5} lng={-92} />\n        <Marker lat={30.2} lng={-92.2} />\n      </GoogleMapReact>\n      <Filters />\n    </div>\n  )\n}\n\nmyMap.propTypes = {\n  center: PropTypes.object,\n  zoom: PropTypes.number,\n}\n\nexport default withStyles(styles)(myMap)\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'recompose'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { IconButton, Menu, MenuItem, withStyles } from '@material-ui/core'\nimport PersonIcon from '@material-ui/icons/Person'\n\nimport { user } from '../../util/redux/actions'\nimport withNotifications from '../../util/notifications'\n\nconst styles = theme => ({\n  headerText: {\n    color: theme.palette.primary.contrastText,\n  },\n})\n\nconst LogoutMenu = ({ classes, clearReduxToken, history, notifications }) => {\n  const [logoutMenuAnchor, setLogoutMenuAnchor] = useState(null)\n\n  const setLogoutMenu = clearAnchor => e =>\n    setLogoutMenuAnchor(clearAnchor ? null : e.currentTarget)\n\n  const logout = () => {\n    try {\n      clearReduxToken()\n      let stored = sessionStorage.getItem('theoTracker')\n      if (stored) {\n        stored = JSON.parse(stored)\n        stored.token = ''\n        sessionStorage.setItem('theoTracker', JSON.stringify(stored))\n      }\n      notifications.notify('Logged Out Successfully')\n      history.push('/app/auth/login')\n    } catch {\n      notifications.notifyError('Error Logging Out')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={setLogoutMenu()} className={classes.headerText}>\n        <PersonIcon />\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={logoutMenuAnchor}\n        keepMounted\n        open={Boolean(logoutMenuAnchor)}\n        onClose={setLogoutMenu('clear')}\n      >\n        <MenuItem onClick={setLogoutMenu('clear')}>Profile</MenuItem>\n        <MenuItem onClick={setLogoutMenu('clear')}>My account</MenuItem>\n        <MenuItem onClick={logout}>Logout</MenuItem>\n      </Menu>\n    </>\n  )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  clearReduxToken: () => dispatch(user.logout()),\n})\n\nLogoutMenu.propTypes = {\n  classes: PropTypes.object,\n  clearReduxToken: PropTypes.func,\n  history: PropTypes.object,\n  notifications: PropTypes.object,\n}\n\nexport default compose(\n  connect(\n    null,\n    mapDispatchToProps\n  ),\n  withNotifications,\n  withRouter,\n  withStyles(styles)\n)(LogoutMenu)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  AppBar,\n  IconButton,\n  Toolbar,\n  Typography,\n  withStyles,\n} from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport clsx from 'clsx'\n\nimport LogoutMenu from './LogoutMenu'\n\nconst styles = theme => ({\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    height: '100%',\n    width: '100%',\n  },\n  content: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  drawerOpen: {\n    paddingLeft: 240,\n  },\n  filler: theme.mixins.toolbar,\n  headerText: {\n    color: theme.palette.primary.contrastText,\n  },\n  menuIcon: {},\n})\n\nconst Header = ({ classes, open, toggleDrawer }) => {\n  return (\n    <>\n      <div className={classes.filler} />\n      <AppBar>\n        <Toolbar>\n          <div className={classes.root}>\n            <div className={classes.content}>\n              <IconButton\n                onClick={toggleDrawer}\n                className={clsx(classes.menuIcon, classes.headerText)}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography className={classes.headerText} variant=\"h6\">\n                TheoForce\n              </Typography>\n            </div>\n            <div />\n            <LogoutMenu />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </>\n  )\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object,\n}\n\nexport default withStyles(styles)(Header)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Drawer,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  withStyles,\n} from '@material-ui/core'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\n\nconst styles = theme => ({\n  drawer: {\n    width: 240,\n    flexShrink: 0,\n  },\n  drawerHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    height: theme.mixins.toolbar.minHeight + 8,\n    padding: `0 ${theme.spacing.unit * 2}px`,\n  },\n})\n\n// eslint-disable-next-line no-unused-vars\nconst Header = ({ classes, open, closeDrawer }) => {\n  return (\n    <Drawer\n      PaperProps={{\n        style: {\n          zIndex: 1099,\n          width: 240,\n        },\n      }}\n      open={open}\n      onClose={closeDrawer}\n      // variant=\"persistent\"\n      className={classes.drawer}\n    >\n      <div className={classes.drawerHeader}>\n        <IconButton onClick={closeDrawer}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <div className={classes.list}>\n        <List>\n          {['Home', 'Inspections', 'Stuff', 'More Stuff'].map(text => (\n            <ListItem button key={text}>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </Drawer>\n  )\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object,\n}\n\nexport default withStyles(styles)(Header)\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core'\n\nimport Header from './Header'\nimport Drawer from './Drawer'\n\nconst styles = () => ({\n  root: {\n    height: '100%',\n  },\n  belowHeader: {},\n  viewArea: {},\n})\n\nconst UserInterface = ({ classes, children }) => {\n  const [open, setOpen] = useState(false)\n\n  const closeDrawer = () => setOpen(false)\n  const toggleDrawer = () => setOpen(prev => !prev)\n  return (\n    <div className={classes.root}>\n      <Header open={open} toggleDrawer={toggleDrawer} />\n      <div className={classes.belowHeader}>\n        <Drawer open={open} closeDrawer={closeDrawer} />\n        <div className={classes.viewArea}>{children}</div>\n      </div>\n    </div>\n  )\n}\n\nUserInterface.propTypes = {\n  classes: PropTypes.object,\n  children: PropTypes.node,\n}\n\nexport default withStyles(styles)(UserInterface)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core'\n\nimport { Map, UserInterface } from '../../components'\n\nconst styles = () => ({\n  mapContainer: {\n    width: '100%',\n    height: 'calc(100vh - 64px)',\n  },\n})\n\nconst Home = ({ classes }) => {\n  return (\n    <UserInterface>\n      <div className={classes.mapContainer}>\n        <Map />\n      </div>\n    </UserInterface>\n  )\n}\n\nHome.propTypes = {\n  classes: PropTypes.object,\n}\n\nexport default withStyles(styles)(Home)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Switch, Redirect, Route } from 'react-router-dom'\nimport { withStyles } from '@material-ui/core'\n\nimport { Auth, Home } from './paths'\nimport { AuthRoute } from './components'\nimport { Notifications } from './util/notifications'\n\nconst styles = theme => ({\n  root: {\n    background: theme.palette.background.default,\n    minHeight: '100vh',\n    minWidth: '100vw',\n  },\n})\n\nconst App = ({ classes }) => {\n  return (\n    <React.Fragment>\n      <div className={classes.root}>\n        <Switch>\n          <Route path=\"/auth\" component={Auth} />\n          <AuthRoute path=\"/home\" component={Home} />\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n      <Notifications />\n    </React.Fragment>\n  )\n}\n\nApp.propTypes = {\n  classes: PropTypes.object,\n}\n\nexport default withStyles(styles)(App)\n","import 'dotenv/config'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ApolloProvider } from 'react-apollo'\nimport { BrowserRouter } from 'react-router-dom'\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport client from './util/apollo'\nimport { store } from './util/redux'\nimport theme from './util/material-ui/theme'\nimport App from './App'\n\nimport './index.css'\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <BrowserRouter basename=\"/app\">\n        <MuiThemeProvider theme={theme}>\n          <App />\n        </MuiThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  </ApolloProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}