{"version":3,"sources":["util/apollo/client.js","util/apollo/index.js","util/redux/reducers/notifications.js","util/redux/reducers/user.js","util/redux/reducers/index.js","util/redux/store.js","util/material-ui/theme.js","util/apollo/queries/assets.js","paths/Assets/createDialog/index.js","paths/Assets/index.js","paths/Auth/View.js","util/apollo/queries/authentication.js","util/redux/actions/user.js","util/redux/actions/notifications.js","util/notifications/withNotifications.js","util/notifications/Notifications.js","util/notifications/index.js","paths/Auth/Login/index.js","paths/Auth/Login/View.js","paths/Auth/Register/index.js","paths/Auth/Register/View.js","paths/Auth/index.js","util/apollo/queries/uploads.js","components/authroute/index.js","components/authroute/AuthRoute.js","components/fileselector/index.js","util/apollo/queries/keys.js","components/map/InfoBox/index.js","components/map/Marker/index.js","components/map/Filters/SearchInput/index.js","components/map/Filters/index.js","components/map/index.js","components/userinterface/LogoutMenu.js","components/userinterface/Header.js","components/userinterface/Drawer.js","components/userinterface/index.js","paths/Files/uploadDialog/index.js","paths/Files/index.js","util/apollo/queries/trackers.js","paths/Home/index.js","paths/Trackers/index.js","App.js","index.js"],"names":["cache","InMemoryCache","console","log","process","uploadLink","createUploadLink","uri","errorLink","onError","_ref","graphQLErrors","networkError","link","ApolloLink","from","client","ApolloClient","initState","message","token","combineReducers","notifications","state","arguments","length","undefined","action","type","user","Object","objectSpread","store","createStore","rootReducer","composeWithDevTools","Theme","createMuiTheme","typography","useNextVariants","overrides","MuiButton","label","textTransform","MuiTableRow","root","cursor","props","MuiTextField","variant","GET_ASSETS","gql","_templateObject","CREATE_ASSET","_templateObject2","compose","withStyles","withApollo","classes","_useState","useState","_useState2","slicedToArray","open","setOpen","_useState3","name","tracker","_useState4","form","setForm","closeDialog","handleChange","key","_ref2","value","target","prev","defineProperty","react_default","a","createElement","Fragment","index_es","color","className","fab","onClick","Add_default","onChange","fullWidth","margin","select","variables","identifier","serial","mutate","mutation","then","_ref3","error","data","alert","catch","e","theme","spacing","unit","width","header","alignItems","display","justifyContent","createDialog","table","react_apollo_esm","query","loading","assets","map","asset","id","tableRow","hover","paddingTop","match","react_router","path","url","component","Login","Register","to","LOGIN","authentication_templateObject","REGISTER","authentication_templateObject2","setToken","logout","variants","notify","body","notifySuccess","notifyError","notifyWarning","mapDispatchToProps","dispatch","withNotifications","BaseComponent","connect","styles","success","backgroundColor","green","red","info","grey","warning","yellow","icon","fontSize","iconVariant","opacity","marginRight","variantIcon","CheckCircleIcon","WarningIcon","ErrorIcon","InfoIcon","SnackbarContentWrapper","onClose","other","objectWithoutProperties","Icon","assign","clsx","Close_default","closeSnackbar","useEffect","anchorOrigin","vertical","horizontal","autoHideDuration","View","padding","footer","marginTop","submitButton","concat","submitText","letterSpacing","fontWeight","palette","primary","contrastText","textField","setUserToken","history","login","password","setState","handleSubmit","asyncToGenerator","regenerator_default","mark","_callee","stored","wrap","_context","next","preventDefault","signIn","sent","sessionStorage","getItem","JSON","parse","setItem","stringify","push","stop","_x","apply","this","changeHandler","_ref4","onSubmit","required","ChevronRight_default","light","react_router_dom","username","email","signUp","GET_UPLOADS","uploads_templateObject","GET_UPLOAD_URL","uploads_templateObject2","UPLOAD_FILE","_templateObject3","AuthRoute","Component","storage","isAuth","isNotAuth","FileSelector","onLoadFile","files","GET_GMAPS_KEY","keys_templateObject","bottom","left","position","content","zIndex","noWrap","borderRadius","height","marker","transition","stopPropagation","onMouseEnter","onMouseLeave","map_InfoBox","placeholder","background","border","boxShadow","right","top","&:hover","closeSearch","visibility","closeSearchVisible","searchIcon","Search_default","Filters_SearchInput","center","markers","zoom","googleMapsKey","google_map_react_lib_default","bootstrapURLKeys","defaultCenter","lat","lng","defaultZoom","latitude","longitude","map_Marker","map_Filters","clearReduxToken","withRouter","headerText","logoutMenuAnchor","setLogoutMenuAnchor","setLogoutMenu","clearAnchor","currentTarget","Person_default","anchorEl","keepMounted","Boolean","_unused","appBar","drawerOpen","paddingLeft","filler","mixins","toolbar","menuIcon","toggleDrawer","Menu_default","userinterface_LogoutMenu","drawer","flexShrink","easing","transitions","easeOut","duration","enteringScreen","drawerHeader","minHeight","drawerPaper","paper","ChevronLeft_default","list","text","button","belowHeader","viewArea","children","userinterface_Header","Drawer","file","setFile","_useState5","_useState6","saveAs","setSaveAs","fileselector","downloadIcon","marginLeft","downloadFile","s3Key","filename","fetchPolicy","uploadUrl","getUploadUrl","fetch","method","response","blob","window","URL","createObjectURL","Blob","document","href","setAttribute","appendChild","click","parentNode","removeChild","uploadDialog","_ref5","uploads","upload","align","SaveAlt_default","GET_TRACKERS","trackers_templateObject","mapContainer","setMarkers","trackers","battery","default","minWidth","Auth","userinterface","authroute","Assets","Files","Home","Trackers","notifications_Notifications","ReactDOM","render","es","basename","core_styles","src_App","getElementById"],"mappings":"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","file":"static/js/main.21dfd6d5.chunk.js","sourcesContent":["import { InMemoryCache } from 'apollo-cache-inmemory'\nimport { ApolloClient } from 'apollo-client'\nimport { createUploadLink } from 'apollo-upload-client'\nimport { onError } from 'apollo-link-error'\nimport { ApolloLink } from 'apollo-link'\n\nconst cache = new InMemoryCache()\n\nconsole.log(process.env.NODE_ENV)\n\nconst uploadLink = createUploadLink({\n  uri:\n    process.env.NODE_ENV === 'development'\n      ? 'http://localhost:8000/graphql'\n      : 'https://crate-tracker-backend.herokuapp.com/graphql',\n})\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    // do something with graphql error\n  }\n\n  if (networkError) {\n    // do something with network error\n  }\n})\n\nconst link = ApolloLink.from([errorLink, uploadLink])\n\nconst client = new ApolloClient({\n  link,\n  cache,\n})\n\nexport default client\n","import client from './client'\nimport ApolloError from './components/Error'\nimport ApolloLoading from './components/Loading'\n\nexport default client\nexport { ApolloLoading, ApolloError }\n","const initState = {\n  message: {},\n}\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case 'NOTIFICATIONS/NEW':\n      return { message: action.message }\n    default:\n      return state\n  }\n}\n","const initState = {\n  token: '',\n}\n\nexport default (state = initState, action) => {\n  switch (action.type) {\n    case 'USER/SET_TOKEN':\n      return { ...state, token: action.token }\n    case 'USER/CLEAR_TOKEN':\n      return { token: '' }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\n\nimport notifications from './notifications'\nimport user from './user'\n\nexport default combineReducers({ notifications, user })\n","import { createStore } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport rootReducer from './reducers'\n\nconst store = createStore(rootReducer, composeWithDevTools())\n\nexport { store }\n","import { createMuiTheme } from '@material-ui/core/'\n\nconst Theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  overrides: {\n    MuiButton: {\n      label: {\n        textTransform: 'none',\n      },\n    },\n    MuiTableRow: {\n      root: {\n        cursor: 'pointer',\n      },\n    },\n  },\n  props: {\n    MuiTextField: {\n      variant: 'outlined',\n    },\n  },\n})\n\nexport default Theme\n","import gql from 'graphql-tag'\n\nconst GET_ASSETS = gql`\n  query {\n    assets {\n      id\n      type\n      identifier\n      tracker {\n        id\n        serial\n      }\n    }\n  }\n`\n\nconst CREATE_ASSET = gql`\n  mutation($type: String!, $identifier: String!, $serial: String) {\n    createAsset(type: $type, identifier: $identifier, serial: $serial) {\n      id\n      type\n      identifier\n      tracker {\n        serial\n      }\n    }\n  }\n`\n\nexport { CREATE_ASSET, GET_ASSETS }\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'recompose'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  Fab,\n  MenuItem,\n  TextField,\n  withStyles,\n  DialogTitle,\n} from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add'\nimport { withApollo } from 'react-apollo'\n\nimport { CREATE_ASSET } from '../../../util/apollo/queries/assets'\n\nconst styles = () => ({})\n\nconst CreateDialog = ({ classes, client }) => {\n  const [open, setOpen] = useState(false)\n  const [form, setForm] = useState({\n    name: '',\n    type: '',\n    tracker: '',\n  })\n\n  const openDialog = () => setOpen(true)\n  const closeDialog = () => setOpen(false)\n\n  const handleChange = key => ({ target: { value } }) =>\n    setForm(prev => ({ ...prev, [key]: value }))\n\n  const createNewAsset = () => {\n    const variables = {\n      identifier: form.name,\n      type: form.type,\n    }\n\n    if (form.tracker.length) variables.serial = form.tracker\n\n    client\n      .mutate({\n        mutation: CREATE_ASSET,\n        variables,\n      })\n      .then(({ error, data }) => {\n        if (error) alert(error)\n        if (data) closeDialog()\n      })\n      .catch(e => alert(e))\n  }\n\n  return (\n    <>\n      <Fab color=\"primary\" className={classes.fab} onClick={openDialog}>\n        <AddIcon />\n      </Fab>\n      <Dialog open={open}>\n        <DialogTitle>Create New Asset</DialogTitle>\n        <DialogContent>\n          <TextField\n            label=\"Name\"\n            value={form.name}\n            onChange={handleChange('name')}\n            variant=\"outlined\"\n            fullWidth\n            margin=\"dense\"\n          />\n          <TextField\n            label=\"Type\"\n            value={form.type}\n            onChange={handleChange('type')}\n            variant=\"outlined\"\n            fullWidth\n            margin=\"dense\"\n            select\n          >\n            <MenuItem value=\"crate\">Crate</MenuItem>\n          </TextField>\n          <TextField\n            label=\"Tracker Serial Number (Optional)\"\n            value={form.tracker}\n            onChange={handleChange('tracker')}\n            variant=\"outlined\"\n            fullWidth\n            margin=\"dense\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog}>Cancel</Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={createNewAsset}>\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nCreateDialog.propTypes = {\n  classes: PropTypes.object,\n  client: PropTypes.object,\n}\n\nexport default compose(\n  withStyles(styles),\n  withApollo\n)(CreateDialog)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Paper,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Typography,\n  withStyles,\n} from '@material-ui/core'\nimport { Query } from 'react-apollo'\n\nimport { GET_ASSETS } from '../../util/apollo/queries/assets'\nimport CreateAsset from './createDialog'\n\nconst styles = theme => ({\n  root: {\n    margin: theme.spacing.unit * 3,\n    width: '100%',\n  },\n  header: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: theme.spacing.unit,\n  },\n})\n\nconst Assets = ({ classes }) => {\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant=\"h6\">Assets</Typography>\n        <CreateAsset />\n      </div>\n      <Paper>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell>Type</TableCell>\n              <TableCell>Nearest Address</TableCell>\n              <TableCell>Tracker Serial</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <Query query={GET_ASSETS}>\n              {({ data, loading, error }) => {\n                if (loading || error) return null\n                return data.assets.map(asset => (\n                  <TableRow key={asset.id} className={classes.tableRow} hover>\n                    <TableCell>{asset.identifier}</TableCell>\n                    <TableCell>{asset.type}</TableCell>\n                    <TableCell>\n                      1234 Jones Street, Lafayette, LA 54321\n                    </TableCell>\n                    <TableCell>\n                      {asset.tracker ? asset.tracker.serial : '-'}\n                    </TableCell>\n                  </TableRow>\n                ))\n              }}\n            </Query>\n          </TableBody>\n        </Table>\n      </Paper>\n    </div>\n  )\n}\n\nAssets.propTypes = {\n  classes: PropTypes.object,\n}\n\nexport default withStyles(styles)(Assets)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core'\nimport { Redirect, Route, Switch } from 'react-router-dom'\n\nimport { Login, Register } from './'\n\nconst styles = () => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    paddingTop: 200,\n    width: '100%',\n  },\n})\n\nconst View = ({ classes, match }) => {\n  return (\n    <div className={classes.root}>\n      <Switch>\n        <Route path={match.url + '/login'} component={Login} />\n        <Route path={match.url + '/register'} component={Register} />\n        <Redirect to=\"/auth/login\" />\n      </Switch>\n    </div>\n  )\n}\n\nView.propTypes = {\n  classes: PropTypes.object,\n  match: PropTypes.object,\n}\n\nexport default withStyles(styles)(View)\n","import gql from 'graphql-tag'\n\nconst LOGIN = gql`\n  mutation($login: String!, $password: String!) {\n    signIn(login: $login, password: $password) {\n      token\n    }\n  }\n`\n\nconst REGISTER = gql`\n  mutation($username: String!, $email: String!, $password: String!) {\n    signUp(username: $username, email: $email, password: $password) {\n      token\n    }\n  }\n`\n\nexport { LOGIN, REGISTER }\n","export const setToken = token => ({\n  type: 'USER/SET_TOKEN',\n  token,\n})\n\nexport const logout = () => ({\n  type: 'USER/CLEAR_TOKEN',\n})\n","const variants = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  ERROR: 'error',\n  WARNING: 'warning',\n}\n\nexport const notify = body => ({\n  type: 'NOTIFICATIONS/NEW',\n  message: {\n    body,\n    variant: variants.INFO,\n  },\n})\n\nexport const notifySuccess = body => ({\n  type: 'NOTIFICATIONS/NEW',\n  message: {\n    body,\n    variant: variants.SUCCESS,\n  },\n})\nexport const notifyError = body => ({\n  type: 'NOTIFICATIONS/NEW',\n  message: {\n    body,\n    variant: variants.ERROR,\n  },\n})\nexport const notifyWarning = body => ({\n  type: 'NOTIFICATIONS/NEW',\n  message: {\n    body,\n    variant: variants.WARNING,\n  },\n})\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport { notifications } from '../redux/actions'\n\nconst mapDispatchToProps = dispatch => ({\n  notifications: {\n    notify: message => dispatch(notifications.notify(message)),\n    notifySuccess: message => dispatch(notifications.notifySuccess(message)),\n    notifyError: message => dispatch(notifications.notifyError(message)),\n    notifyWarning: message => dispatch(notifications.notifyWarning(message)),\n  },\n})\n\nconst withNotifications = BaseComponent => {\n  const ConnectedComponent = props => <BaseComponent {...props} />\n\n  return connect(\n    null,\n    mapDispatchToProps\n  )(ConnectedComponent)\n}\n\nexport default withNotifications\n","import React, { useState, useEffect } from 'react'\nimport clsx from 'clsx'\nimport PropTypes from 'prop-types'\nimport { compose } from 'recompose'\nimport { connect } from 'react-redux'\nimport {\n  IconButton,\n  Snackbar,\n  SnackbarContent,\n  withStyles,\n} from '@material-ui/core'\nimport { red, grey, green, yellow } from '@material-ui/core/colors'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport CloseIcon from '@material-ui/icons/Close'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport InfoIcon from '@material-ui/icons/Info'\n\nconst styles = theme => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: red[500],\n  },\n  info: {\n    backgroundColor: grey[800],\n  },\n  warning: {\n    backgroundColor: yellow[800],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n})\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n}\n\nconst SnackbarContentWrapper = withStyles(styles)(\n  ({ classes, className, message, onClose, variant, ...other }) => {\n    const Icon = variantIcon[variant]\n\n    return (\n      <SnackbarContent\n        className={clsx(classes[variant], className)}\n        message={\n          <span className={classes.message}>\n            <Icon className={clsx(classes.icon, classes.iconVariant)} />\n            {message}\n          </span>\n        }\n        action={[\n          <IconButton key=\"close\" color=\"inherit\" onClick={onClose}>\n            <CloseIcon className={classes.icon} />\n          </IconButton>,\n        ]}\n        {...other}\n      />\n    )\n  }\n)\n\nSnackbarContentWrapper.propTypes = {\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  message: PropTypes.string,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n  other: PropTypes.object,\n}\n\nconst Notifications = ({ message }) => {\n  const [open, setOpen] = useState(!!message.body)\n  const closeSnackbar = () => setOpen(false)\n\n  useEffect(() => {\n    setOpen(!!message.body)\n  }, [message])\n\n  //\n  // Set to true to style snackbars\n  //\n  const styling = false\n\n  if (!styling && message && message.body)\n    return (\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        open={open}\n        autoHideDuration={1400}\n        onClose={closeSnackbar}\n      >\n        <SnackbarContentWrapper\n          onClose={closeSnackbar}\n          variant={message.variant || 'info'}\n          message={message.body}\n        />\n      </Snackbar>\n    )\n\n  if (styling)\n    return (\n      <>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n          open={true}\n          autoHideDuration={3000000}\n          onClose={closeSnackbar}\n        >\n          <SnackbarContentWrapper\n            onClose={closeSnackbar}\n            variant={'info'}\n            message={'INFO sample-message'}\n          />\n        </Snackbar>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n          open={true}\n          autoHideDuration={3000000}\n          onClose={closeSnackbar}\n        >\n          <SnackbarContentWrapper\n            onClose={closeSnackbar}\n            variant={'success'}\n            message={'SUCCESS sample-message'}\n          />\n        </Snackbar>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'right',\n          }}\n          open={true}\n          autoHideDuration={3000000}\n          onClose={closeSnackbar}\n        >\n          <SnackbarContentWrapper\n            onClose={closeSnackbar}\n            variant={'warning'}\n            message={'WARNING sample-message'}\n          />\n        </Snackbar>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'left',\n          }}\n          open={true}\n          autoHideDuration={3000000}\n          onClose={closeSnackbar}\n        >\n          <SnackbarContentWrapper\n            onClose={closeSnackbar}\n            variant={'error'}\n            message={'ERROR sample-message'}\n          />\n        </Snackbar>{' '}\n      </>\n    )\n\n  return null\n}\n\nNotifications.propTypes = {\n  classes: PropTypes.object,\n  message: PropTypes.object,\n}\n\nconst mapStateToProps = state => ({\n  message: state.notifications.message,\n})\n\nexport default compose(\n  connect(mapStateToProps),\n  withStyles(styles)\n)(Notifications)\n","import withNotifications from './withNotifications'\nimport Notifications from './Notifications'\n\nexport { Notifications }\nexport default withNotifications\n","import View from './View'\n\nexport default View\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { withApollo } from 'react-apollo'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport {\n  Button,\n  Divider,\n  Paper,\n  TextField,\n  Typography,\n  withStyles,\n} from '@material-ui/core'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\n\nimport { LOGIN } from '../../../util/apollo/queries/authentication'\nimport withNotifications from '../../../util/notifications'\nimport { user } from '../../../util/redux/actions'\n\nconst styles = theme => ({\n  root: {\n    padding: theme.spacing.unit * 3,\n    width: 400,\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  footer: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing.unit,\n  },\n  submitButton: {\n    margin: `${theme.spacing.unit * 2}px 0`,\n    width: '100%',\n  },\n  submitText: {\n    letterSpacing: 0.5,\n    fontWeight: 700,\n    color: theme.palette.primary.contrastText,\n  },\n  textField: {\n    width: '100%',\n  },\n})\n\nconst Login = ({ classes, client, history, notifications, setUserToken }) => {\n  const [state, setState] = useState({\n    login: '',\n    password: '',\n  })\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n\n    const token = await client\n      .mutate({\n        mutation: LOGIN,\n        variables: {\n          login: state.login,\n          password: state.password,\n        },\n      })\n      .then(({ data }) => data.signIn.token)\n      .catch(e => {\n        notifications.notifyError(e.message)\n      })\n\n    if (token) {\n      setUserToken(token)\n\n      let stored = sessionStorage.getItem('theoTracker')\n      stored = stored ? JSON.parse(stored) : {}\n      stored.token = token\n      sessionStorage.setItem('theoTracker', JSON.stringify(stored))\n\n      notifications.notifySuccess('Logged In Successfully')\n      history.push('/home')\n    }\n  }\n\n  const changeHandler = ({ target }) => {\n    setState(prev => ({ ...prev, [target.name]: target.value }))\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <form onSubmit={handleSubmit}>\n        <div className={classes.header}>\n          <Typography variant=\"h5\">Login</Typography>\n        </div>\n        <TextField\n          label=\"Username\"\n          name=\"login\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          required\n          className={classes.textField}\n          value={state.login}\n          onChange={changeHandler}\n        />\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          required\n          className={classes.textField}\n          value={state.password}\n          onChange={changeHandler}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submitButton}\n        >\n          <Typography variant=\"subtitle1\" className={classes.submitText}>\n            Login\n          </Typography>{' '}\n          <ChevronRightIcon />\n        </Button>\n        <Divider light />\n        <div className={classes.footer}>\n          <Link to=\"/auth/register/\">\n            <Button>Create Account</Button>\n          </Link>\n        </div>\n      </form>\n    </Paper>\n  )\n}\n\nLogin.propTypes = {\n  classes: PropTypes.object,\n  client: PropTypes.object,\n  history: PropTypes.object,\n  notifications: PropTypes.object,\n  setUserToken: PropTypes.func,\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setUserToken: token => dispatch(user.setToken(token)),\n})\n\nexport default compose(\n  withNotifications,\n  withStyles(styles),\n  connect(\n    null,\n    mapDispatchToProps\n  ),\n  withApollo\n)(Login)\n","import View from './View'\n\nexport default View\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { withApollo } from 'react-apollo'\nimport { connect } from 'react-redux'\nimport { compose } from 'recompose'\nimport {\n  Button,\n  Divider,\n  Paper,\n  TextField,\n  Typography,\n  withStyles,\n} from '@material-ui/core'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\n\nimport withNotifications from '../../../util/notifications/withNotifications'\nimport { REGISTER } from '../../../util/apollo/queries/authentication'\nimport { user } from '../../../util/redux/actions'\n\nconst styles = theme => ({\n  root: {\n    padding: theme.spacing.unit * 3,\n    width: 400,\n  },\n  header: {\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  footer: {\n    display: 'flex',\n    justifyContent: 'center',\n    marginTop: theme.spacing.unit,\n  },\n  submitButton: {\n    margin: `${theme.spacing.unit * 2}px 0`,\n    width: '100%',\n  },\n  submitText: {\n    letterSpacing: 0.5,\n    fontWeight: 700,\n    color: theme.palette.primary.contrastText,\n  },\n  textField: {\n    width: '100%',\n  },\n})\n\nconst Register = ({ classes, client, history, setUserToken }) => {\n  const [state, setState] = useState({\n    username: '',\n    email: '',\n    password: '',\n  })\n\n  const handleSubmit = async e => {\n    e.preventDefault()\n\n    const token = await client\n      .mutate({\n        mutation: REGISTER,\n        variables: {\n          username: state.username,\n          email: state.email,\n          password: state.password,\n        },\n      })\n      .then(({ data }) => data.signUp.token)\n      .catch(e => alert(e))\n\n    if (token) {\n      setUserToken(token)\n\n      let stored = sessionStorage.getItem('theoTracker')\n      stored = stored ? JSON.parse(stored) : {}\n      stored.token = token\n      sessionStorage.setItem('theoTracker', JSON.stringify(stored))\n\n      history.push('/home')\n    }\n  }\n\n  const changeHandler = ({ target }) =>\n    setState(prev => ({ ...prev, [target.name]: target.value }))\n\n  return (\n    <Paper className={classes.root}>\n      <form onSubmit={handleSubmit}>\n        <div className={classes.header}>\n          <Typography variant=\"h5\">Register</Typography>\n        </div>\n        <TextField\n          label=\"Username\"\n          name=\"username\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          required\n          className={classes.textField}\n          value={state.username}\n          onChange={changeHandler}\n        />\n        <TextField\n          label=\"Email\"\n          name=\"email\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          required\n          className={classes.textField}\n          value={state.email}\n          onChange={changeHandler}\n        />\n        <TextField\n          label=\"Password\"\n          type=\"password\"\n          name=\"password\"\n          margin=\"normal\"\n          variant=\"outlined\"\n          required\n          className={classes.textField}\n          value={state.password}\n          onChange={changeHandler}\n        />\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submitButton}\n        >\n          <Typography variant=\"subtitle1\" className={classes.submitText}>\n            Register\n          </Typography>{' '}\n          <ChevronRightIcon />\n        </Button>\n        <Divider light />\n        <div className={classes.footer}>\n          <Link to=\"/auth/login/\">\n            <Button>Have an account?</Button>\n          </Link>\n        </div>\n      </form>\n    </Paper>\n  )\n}\n\nRegister.propTypes = {\n  classes: PropTypes.object,\n  client: PropTypes.object,\n  history: PropTypes.object,\n  setUserToken: PropTypes.func,\n}\n\nconst mapDispatchToProps = dispatch => ({\n  setUserToken: token => dispatch(user.setToken(token)),\n})\n\nexport default compose(\n  withNotifications,\n  withStyles(styles),\n  connect(\n    null,\n    mapDispatchToProps\n  ),\n  withApollo\n)(Register)\n","import View from './View'\nimport Login from './Login'\nimport Register from './Register'\n\nexport default View\nexport { Login, Register }\n","import gql from 'graphql-tag'\n\nconst GET_UPLOADS = gql`\n  query {\n    uploads {\n      filename\n      s3Key\n    }\n  }\n`\n\nconst GET_UPLOAD_URL = gql`\n  query($s3Key: String!) {\n    getUploadUrl(s3Key: $s3Key)\n  }\n`\n\nconst UPLOAD_FILE = gql`\n  mutation($file: Upload!, $saveAs: String) {\n    singleUpload(file: $file, saveAs: $saveAs) {\n      filename\n    }\n  }\n`\n\nexport { GET_UPLOADS, GET_UPLOAD_URL, UPLOAD_FILE }\n","import AuthRoute from './AuthRoute'\n\nexport default AuthRoute\n","import React from 'react'\nimport { Route, Redirect } from 'react-router'\nimport { connect } from 'react-redux'\n\nconst AuthRoute = ({ component: Component, token, ...props }) => {\n  if (!token.length) {\n    const storage = sessionStorage.getItem('theoTracker')\n    if (storage) token = JSON.parse(storage).token || ''\n  }\n  const isAuth = <Route {...props} component={Component} />\n  const isNotAuth = <Redirect to=\"/auth/login\" />\n  return token.length ? isAuth : isNotAuth\n}\n\nconst mapStateToProps = state => ({\n  token: state.user.token,\n})\n\nexport default connect(mapStateToProps)(AuthRoute)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst FileSelector = ({ onLoadFile }) => (\n  <input type=\"file\" onChange={({ target: { files } }) => onLoadFile(files)} />\n)\n\nFileSelector.propTypes = {\n  onLoadFile: PropTypes.func,\n}\n\nexport default FileSelector\n","import gql from 'graphql-tag'\n\nconst GET_GMAPS_KEY = gql`\n  query {\n    googleMapsKey\n  }\n`\n\nexport { GET_GMAPS_KEY }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Paper, Typography, withStyles } from '@material-ui/core'\nimport { Link } from 'react-router-dom'\n\nconst styles = theme => ({\n  root: {\n    alignItems: 'center',\n    bottom: 0,\n    display: 'flex',\n    justifyContent: 'center',\n    left: 0,\n    padding: theme.spacing.unit * 2,\n    position: 'absolute',\n  },\n  content: {\n    cursor: 'pointer',\n    padding: theme.spacing.unit * 2,\n    zIndex: 10,\n  },\n})\n\n// eslint-disable-next-line no-unused-vars\nconst InfoBox = ({ classes, open, setOpen }) => {\n  if (open)\n    return (\n      <div className={classes.root}>\n        <Paper className={classes.content}>\n          <Typography noWrap>ID: 12349073</Typography>\n          <Typography noWrap>Type: Crate</Typography>\n          <Typography noWrap>Updated: July 08, 2019 4:44PM</Typography>\n          <Link to={'/assets'}>\n            <Typography noWrap>Details</Typography>\n          </Link>\n        </Paper>\n      </div>\n    )\n  return null\n}\n\nInfoBox.propTypes = {\n  classes: PropTypes.object,\n  open: PropTypes.bool,\n  setOpen: PropTypes.func,\n}\n\nexport default withStyles(styles)(InfoBox)\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core'\n\nimport InfoBox from '../InfoBox'\n\nconst styles = () => ({\n  root: {\n    alignItems: 'center',\n    borderRadius: 15,\n    cursor: 'pointer',\n    display: 'flex',\n    height: 30,\n    justifyContent: 'center',\n    width: 30,\n  },\n  marker: {\n    backgroundColor: 'red',\n    borderRadius: 2,\n    height: 10,\n    width: 10,\n    position: 'relative',\n    transition: '.2s',\n  },\n})\n\nconst Marker = ({ classes }) => {\n  const [open, setOpen] = useState(false)\n\n  const showInfo = () => setOpen(true)\n  const hideInfo = () => setOpen(false)\n  const toggleInfo = e => {\n    e.stopPropagation()\n    setOpen(prev => !prev)\n  }\n\n  return (\n    <div\n      className={classes.root}\n      onClick={toggleInfo}\n      onMouseEnter={showInfo}\n      onMouseLeave={hideInfo}\n    >\n      <div className={classes.marker}>\n        <InfoBox open={open} setOpen={setOpen} />\n      </div>\n    </div>\n  )\n}\n\nMarker.propTypes = {\n  classes: PropTypes.object,\n}\n\nexport default withStyles(styles)(Marker)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { InputBase, withStyles } from '@material-ui/core'\n\nconst styles = theme => ({\n  textField: {\n    width: 0,\n  },\n  open: {\n    width: '100%',\n  },\n})\n\nconst SearchInput = ({ classes, open }) => {\n  return (\n    <InputBase\n      className={clsx(classes.textField, open && classes.open)}\n      placeholder=\"Search...\"\n    />\n  )\n}\n\nSearchInput.propTypes = {\n  classes: PropTypes.object,\n}\n\nexport default withStyles(styles)(SearchInput)\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport clsx from 'clsx'\nimport { withStyles } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight'\n\nimport SearchInput from './SearchInput'\n\nconst styles = () => ({\n  root: {\n    alignItems: 'center',\n    background: 'rgb(255, 255, 255)',\n    border: '0px none',\n    borderRadius: 2,\n    boxShadow: 'rgba(0, 0, 0, 0.3) 0px 1px 4px -1px',\n    color: '#666666',\n    cursor: 'pointer',\n    display: 'flex',\n    height: 40,\n    justifyContent: 'center',\n    // left: 10,\n    margin: 10,\n    position: 'absolute',\n    right: 50,\n    width: 40,\n    top: 0,\n    '&:hover': {\n      color: '#333333',\n    },\n  },\n  closeSearch: {\n    visibility: 'hidden',\n    width: 0,\n  },\n  closeSearchVisible: {\n    width: '100%',\n  },\n  open: {\n    width: 300,\n  },\n  searchIcon: {\n    margin: 16,\n  },\n})\n\nconst Filters = ({ classes }) => {\n  const [open, setOpen] = useState(false)\n\n  const openOrSearch = () => {\n    setOpen(true)\n  }\n\n  return (\n    <>\n      <div className={clsx(open && classes.open, classes.root)}>\n        <div className={classes.closeSearch}>\n          <ChevronRightIcon />\n        </div>\n        <SearchIcon onClick={openOrSearch} className={classes.searchIcon} />\n        <SearchInput open={open} />\n      </div>\n    </>\n  )\n}\n\nFilters.propTypes = {\n  classes: PropTypes.object,\n}\n\nexport default withStyles(styles)(Filters)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport GoogleMapReact from 'google-map-react'\nimport { withStyles } from '@material-ui/core'\nimport { Query } from 'react-apollo'\n\nimport { GET_GMAPS_KEY } from '../../util/apollo/queries/keys'\nimport Marker from './Marker'\nimport Filters from './Filters'\n\nconst styles = () => ({\n  root: {\n    height: '100%',\n    position: 'relative',\n    width: '100%',\n  },\n})\n\nconst myMap = ({ classes, center, markers, zoom }) => {\n  return (\n    <div className={classes.root}>\n      <Query query={GET_GMAPS_KEY}>\n        {({ data: { googleMapsKey } }) => {\n          if (!googleMapsKey) return null\n          return (\n            <GoogleMapReact\n              bootstrapURLKeys={{\n                key: googleMapsKey,\n              }}\n              defaultCenter={\n                center || {\n                  lat: 30.25,\n                  lng: -92,\n                }\n              }\n              defaultZoom={zoom || 10}\n            >\n              {markers.map(({ serial, latitude, longitude }) => (\n                <Marker key={serial} lat={latitude} lng={longitude} />\n              ))}\n            </GoogleMapReact>\n          )\n        }}\n      </Query>\n      <Filters />\n    </div>\n  )\n}\n\nmyMap.propTypes = {\n  center: PropTypes.object,\n  classes: PropTypes.object,\n  markers: PropTypes.array,\n  zoom: PropTypes.number,\n}\n\nexport default withStyles(styles)(myMap)\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'recompose'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { IconButton, Menu, MenuItem, withStyles } from '@material-ui/core'\nimport PersonIcon from '@material-ui/icons/Person'\n\nimport { user } from '../../util/redux/actions'\nimport withNotifications from '../../util/notifications'\n\nconst styles = theme => ({\n  headerText: {\n    color: theme.palette.primary.contrastText,\n  },\n})\n\nconst LogoutMenu = ({ classes, clearReduxToken, history, notifications }) => {\n  const [logoutMenuAnchor, setLogoutMenuAnchor] = useState(null)\n\n  const setLogoutMenu = clearAnchor => e =>\n    setLogoutMenuAnchor(clearAnchor ? null : e.currentTarget)\n\n  const logout = () => {\n    try {\n      clearReduxToken()\n      let stored = sessionStorage.getItem('theoTracker')\n      if (stored) {\n        stored = JSON.parse(stored)\n        stored.token = ''\n        sessionStorage.setItem('theoTracker', JSON.stringify(stored))\n      }\n      notifications.notify('Logged Out Successfully')\n      history.push('/app/auth/login')\n    } catch {\n      notifications.notifyError('Error Logging Out')\n    }\n  }\n\n  return (\n    <>\n      <IconButton onClick={setLogoutMenu()} className={classes.headerText}>\n        <PersonIcon />\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={logoutMenuAnchor}\n        keepMounted\n        open={Boolean(logoutMenuAnchor)}\n        onClose={setLogoutMenu('clear')}\n      >\n        <MenuItem onClick={setLogoutMenu('clear')}>Profile</MenuItem>\n        <MenuItem onClick={setLogoutMenu('clear')}>My account</MenuItem>\n        <MenuItem onClick={logout}>Logout</MenuItem>\n      </Menu>\n    </>\n  )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  clearReduxToken: () => dispatch(user.logout()),\n})\n\nLogoutMenu.propTypes = {\n  classes: PropTypes.object,\n  clearReduxToken: PropTypes.func,\n  history: PropTypes.object,\n  notifications: PropTypes.object,\n}\n\nexport default compose(\n  connect(\n    null,\n    mapDispatchToProps\n  ),\n  withNotifications,\n  withRouter,\n  withStyles(styles)\n)(LogoutMenu)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  AppBar,\n  IconButton,\n  Toolbar,\n  Typography,\n  withStyles,\n} from '@material-ui/core'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport clsx from 'clsx'\n\nimport LogoutMenu from './LogoutMenu'\n\nconst styles = theme => ({\n  root: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    height: '100%',\n    width: '100%',\n  },\n  appBar: {},\n  content: {\n    alignItems: 'center',\n    display: 'flex',\n  },\n  drawerOpen: {\n    paddingLeft: 240,\n  },\n  filler: theme.mixins.toolbar,\n  headerText: {\n    color: theme.palette.primary.contrastText,\n  },\n  menuIcon: {},\n})\n\nconst Header = ({ classes, toggleDrawer }) => {\n  return (\n    <>\n      <div className={classes.filler} />\n      <AppBar className={classes.appBar}>\n        <Toolbar>\n          <div className={classes.root}>\n            <div className={classes.content}>\n              <IconButton\n                onClick={toggleDrawer}\n                className={clsx(classes.menuIcon, classes.headerText)}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography className={classes.headerText} variant=\"h6\">\n                TheoForce\n              </Typography>\n            </div>\n            <div />\n            <LogoutMenu />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </>\n  )\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object,\n  toggleDrawer: PropTypes.func,\n}\n\nexport default withStyles(styles)(Header)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'recompose'\nimport {\n  Drawer,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemText,\n  withStyles,\n} from '@material-ui/core'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport { withRouter } from 'react-router-dom'\n\nconst styles = theme => ({\n  drawer: {\n    flexShrink: 0,\n    easing: theme.transitions.easing.easeOut,\n    transition: theme.transitions.duration.enteringScreen,\n  },\n  drawerHeader: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'flex-end',\n    height: theme.mixins.toolbar.minHeight + 8,\n    padding: `0 ${theme.spacing.unit * 2}px`,\n  },\n  drawerPaper: {\n    width: 240,\n    zIndex: theme.zIndex.appBar - 1,\n  },\n})\n\nconst MyDrawer = ({ classes, history, open, toggleDrawer }) => {\n  const goTo = path => () => {\n    toggleDrawer()\n    history.push('/' + path)\n  }\n\n  return (\n    <Drawer\n      open={open}\n      onClose={toggleDrawer}\n      classes={{\n        paper: classes.drawerPaper,\n      }}\n    >\n      <div className={classes.drawerHeader}>\n        <IconButton onClick={toggleDrawer}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </div>\n      <Divider />\n      <div className={classes.list}>\n        <List>\n          {['Home', 'Assets', 'Trackers', 'Files'].map(text => (\n            <ListItem button onClick={goTo(text)} key={text}>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </Drawer>\n  )\n}\n\nMyDrawer.propTypes = {\n  classes: PropTypes.object,\n  history: PropTypes.object,\n  open: PropTypes.bool,\n  toggleDrawer: PropTypes.func,\n}\n\nexport default compose(\n  withStyles(styles),\n  withRouter\n)(MyDrawer)\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core'\n\nimport Header from './Header'\nimport Drawer from './Drawer'\n\nconst styles = () => ({\n  root: {\n    height: '100%',\n  },\n  belowHeader: {\n    display: 'flex',\n  },\n  viewArea: {\n    width: '100%',\n  },\n})\n\nconst UserInterface = ({ classes, children }) => {\n  const [open, setOpen] = useState(false)\n\n  const toggleDrawer = () => setOpen(prev => !prev)\n  return (\n    <div className={classes.root}>\n      <Header open={open} toggleDrawer={toggleDrawer} />\n      <div className={classes.belowHeader}>\n        <Drawer open={open} toggleDrawer={toggleDrawer} />\n        {children}\n      </div>\n    </div>\n  )\n}\n\nUserInterface.propTypes = {\n  classes: PropTypes.object,\n  children: PropTypes.node,\n}\n\nexport default withStyles(styles)(UserInterface)\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'recompose'\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  Fab,\n  withStyles,\n  DialogTitle,\n} from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add'\nimport { withApollo } from 'react-apollo'\n\nimport { UPLOAD_FILE } from '../../../util/apollo/queries/uploads'\nimport { FileSelector } from '../../../components'\n\nconst styles = () => ({})\n\nconst CreateDialog = ({ classes, client }) => {\n  const [open, setOpen] = useState(false)\n  const [file, setFile] = useState(null)\n  const [saveAs, setSaveAs] = useState('no-name')\n\n  const openDialog = () => setOpen(true)\n  const closeDialog = () => setOpen(false)\n\n  const onLoadFile = files => {\n    setFile(files[0])\n    setSaveAs(files[0].name)\n  }\n\n  const uploadFile = () => {\n    const variables = {\n      file,\n      saveAs,\n    }\n\n    client\n      .mutate({\n        mutation: UPLOAD_FILE,\n        variables,\n      })\n      .then(({ error, data }) => {\n        if (error) alert(error)\n        if (data) closeDialog()\n      })\n      .catch(e => alert(e))\n  }\n\n  return (\n    <>\n      <Fab color=\"primary\" className={classes.fab} onClick={openDialog}>\n        <AddIcon />\n      </Fab>\n      <Dialog open={open}>\n        <DialogTitle>Upload File</DialogTitle>\n        <DialogContent>\n          <FileSelector onLoadFile={onLoadFile} />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={closeDialog}>Cancel</Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={uploadFile}>\n            Upload\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nCreateDialog.propTypes = {\n  classes: PropTypes.object,\n  client: PropTypes.object,\n}\n\nexport default compose(\n  withStyles(styles),\n  withApollo\n)(CreateDialog)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'recompose'\nimport {\n  IconButton,\n  Paper,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Typography,\n  withStyles,\n} from '@material-ui/core'\nimport SaveAltIcon from '@material-ui/icons/SaveAlt'\nimport { withApollo, Query } from 'react-apollo'\n\nimport { GET_UPLOAD_URL, GET_UPLOADS } from '../../util/apollo/queries/uploads'\nimport UploadFile from './uploadDialog'\n\nconst styles = theme => ({\n  root: {\n    margin: theme.spacing.unit * 3,\n    width: '100%',\n  },\n  downloadIcon: {\n    marginLeft: theme.spacing.unit * 2,\n  },\n  header: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: theme.spacing.unit,\n  },\n})\n\nconst Assets = ({ classes, client }) => {\n  const downloadFile = ({ s3Key, filename }) => () => {\n    client\n      .query({\n        query: GET_UPLOAD_URL,\n        variables: { s3Key },\n        fetchPolicy: 'network-only',\n      })\n      .then(async ({ data: { getUploadUrl: uploadUrl } }) => {\n        await fetch(uploadUrl, {\n          method: 'GET',\n        })\n          .then(response => response.blob())\n          .then(blob => {\n            const url = window.URL.createObjectURL(new Blob([blob]))\n            const link = document.createElement('a')\n            link.href = url\n            link.setAttribute('download', filename)\n            document.body.appendChild(link)\n            link.click()\n            link.parentNode.removeChild(link)\n          })\n          .catch(error => {\n            alert(error)\n          })\n      })\n  }\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant=\"h6\">Files</Typography>\n        <UploadFile />\n      </div>\n      <Paper>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <Query query={GET_UPLOADS}>\n              {({ data, loading, error }) => {\n                if (loading || error) return null\n                return data.uploads.map(upload => (\n                  <TableRow key={upload.id} className={classes.tableRow}>\n                    <TableCell align=\"left\">\n                      {upload.filename}\n                      <IconButton\n                        className={classes.downloadIcon}\n                        onClick={downloadFile(upload)}\n                      >\n                        <SaveAltIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                ))\n              }}\n            </Query>\n          </TableBody>\n        </Table>\n      </Paper>\n    </div>\n  )\n}\n\nAssets.propTypes = {\n  classes: PropTypes.object,\n  client: PropTypes.object,\n}\n\nexport default compose(\n  withStyles(styles),\n  withApollo\n)(Assets)\n","import gql from 'graphql-tag'\n\nconst GET_TRACKERS = gql`\n  query {\n    trackers {\n      id\n      latitude\n      longitude\n      battery\n      serial\n      asset {\n        id\n        identifier\n      }\n    }\n  }\n`\n\nexport { GET_TRACKERS }\n","import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { compose } from 'recompose'\nimport { withApollo } from 'react-apollo'\nimport { withStyles } from '@material-ui/core'\n\nimport { Map } from '../../components'\nimport { GET_TRACKERS } from '../../util/apollo/queries/trackers'\n\nconst styles = () => ({\n  mapContainer: {\n    width: '100%',\n    height: 'calc(100vh - 64px)',\n  },\n})\n\nconst Home = ({ classes, client }) => {\n  const [markers, setMarkers] = useState([])\n\n  client\n    .query({ query: GET_TRACKERS })\n    .then(({ data: { trackers } }) => setMarkers(trackers))\n\n  return (\n    <div className={classes.mapContainer}>\n      <Map markers={markers} />\n    </div>\n  )\n}\n\nHome.propTypes = {\n  classes: PropTypes.object,\n  client: PropTypes.object,\n}\n\nexport default compose(\n  withStyles(styles),\n  withApollo\n)(Home)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Paper,\n  Table,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableBody,\n  Typography,\n  withStyles,\n} from '@material-ui/core'\nimport { Query } from 'react-apollo'\n\nimport { GET_TRACKERS } from '../../util/apollo/queries/trackers'\n\nconst styles = theme => ({\n  root: {\n    margin: theme.spacing.unit * 3,\n    width: '100%',\n  },\n  header: {\n    alignItems: 'center',\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: theme.spacing.unit,\n  },\n})\n\nconst Trackers = ({ classes }) => {\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <Typography variant=\"h6\">Trackers</Typography>\n      </div>\n      <Paper>\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Serial</TableCell>\n              <TableCell>Battery</TableCell>\n              <TableCell>Longitude</TableCell>\n              <TableCell>Latitude</TableCell>\n              <TableCell>Asset</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <Query query={GET_TRACKERS}>\n              {({ data, loading, error }) => {\n                if (loading || error) return null\n                return data.trackers.map(tracker => (\n                  <TableRow key={tracker.id} className={classes.tableRow} hover>\n                    <TableCell>{tracker.serial}</TableCell>\n                    <TableCell>{tracker.battery || '-'}</TableCell>\n                    <TableCell>{tracker.latitude || '-'}</TableCell>\n                    <TableCell>{tracker.longitude || '-'}</TableCell>\n                    <TableCell>\n                      {tracker.asset ? tracker.asset.identifier : '-'}\n                    </TableCell>\n                  </TableRow>\n                ))\n              }}\n            </Query>\n          </TableBody>\n        </Table>\n      </Paper>\n    </div>\n  )\n}\n\nTrackers.propTypes = {\n  classes: PropTypes.object,\n}\n\nexport default withStyles(styles)(Trackers)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Switch, Redirect, Route } from 'react-router-dom'\nimport { withStyles } from '@material-ui/core'\n\nimport { Assets, Auth, Files, Home, Trackers } from './paths'\nimport { AuthRoute, UserInterface } from './components'\nimport { Notifications } from './util/notifications'\n\nconst styles = theme => ({\n  root: {\n    background: theme.palette.background.default,\n    minHeight: '100vh',\n    minWidth: '100vw',\n  },\n})\n\nconst App = ({ classes }) => {\n  return (\n    <React.Fragment>\n      <div className={classes.root}>\n        <Switch>\n          <Route path=\"/auth\" component={Auth} />\n          <UserInterface>\n            <AuthRoute path=\"/assets\" component={Assets} />\n            <AuthRoute path=\"/files\" component={Files} />\n            <AuthRoute path=\"/home\" component={Home} />\n            <AuthRoute path=\"/trackers\" component={Trackers} />\n          </UserInterface>\n          <Redirect to=\"/auth/login\" />\n        </Switch>\n      </div>\n      <Notifications />\n    </React.Fragment>\n  )\n}\n\nApp.propTypes = {\n  classes: PropTypes.object,\n}\n\nexport default withStyles(styles)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { ApolloProvider } from 'react-apollo'\nimport { BrowserRouter } from 'react-router-dom'\nimport { MuiThemeProvider } from '@material-ui/core'\n\nimport client from './util/apollo'\nimport { store } from './util/redux'\nimport theme from './util/material-ui/theme'\nimport App from './App'\n\nimport './index.css'\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <Provider store={store}>\n      <BrowserRouter basename=\"/app\">\n        <MuiThemeProvider theme={theme}>\n          <App />\n        </MuiThemeProvider>\n      </BrowserRouter>\n    </Provider>\n  </ApolloProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}